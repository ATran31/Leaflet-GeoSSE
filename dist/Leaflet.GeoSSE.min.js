"use strict";const GeoSSE=L.GeoJSON.extend({connectToEventStream:function(){function addFeature(feature){if(!feature.id){return console.warn("Feature id is required to add a feature, so it can be removed.",feature)}self.addData(feature)}function finder({feature:{id:id}}){return id===this.id}function removeFeature(feature){if(!feature.id){return console.warn("Feature id is required to delete a feature.",feature)}const layer=self.getLayers().find(finder,feature);if(layer){self.removeLayer(layer)}}function add(event){remove(event);const geojson=JSON.parse(event.data);if(geojson.type==="Feature"){return addFeature(geojson)}geojson.features.forEach(addFeature)}function remove(event){const geojson=JSON.parse(event.data);if(geojson.type==="Feature"){return removeFeature(geojson)}geojson.features.forEach(removeFeature)}const self=this;if(typeof this.options.streamUrl==="undefined"){throw Error("Undefined event streamUrl.")}const source=new EventSource(this.options.streamUrl);source.addEventListener("add",add,false);source.addEventListener("remove",remove,false);source.onopen=function(event){};source.onmessage=function(event){};source.onerror=function(event){if(source.readyState===2){self.connectToEventStream()}};this.eventSource=source},disconnect:function(){this.eventSource.close()},setStreamUrl:function(newStreamUrl){this.options.streamUrl=newStreamUrl},switchStream:function(newStream,emptyLayer=false){if(emptyLayer){this.clearLayers()}this.setStreamUrl(newStream);this.disconnect();this.connectToEventStream()}});L.geoSSE=function(data,options){return new GeoSSE(data,options)};