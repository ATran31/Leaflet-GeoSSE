"use strict";var GeoSSE=L.GeoJSON.extend({connectToEventStream:function(){let cls=this;if(typeof this.options.streamUrl==="undefined"){throw Error("Undefined event streamUrl.")}else if(typeof this.options.featureIdField==="undefined"){throw Error("Undefined featureIdField option.")}else{let source=new EventSource(this.options.streamUrl);source.addEventListener("create",function createEvent(event){let geojson=JSON.parse(event.data);cls.addData(geojson)},false);source.addEventListener("update",function updateEvent(event){let geojson=JSON.parse(event.data);for(let l of cls.getLayers()){if(l.feature.properties[cls.options.featureIdField]===geojson.properties[cls.options.featureIdField]){cls.removeLayer(l);cls.addData(geojson)}}},false);source.addEventListener("delete",function deleteEvent(event){let geojson=JSON.parse(event.data);for(let l of cls.getLayers()){if(l.feature.properties[cls.options.featureIdField]===geojson.properties[cls.options.featureIdField]){cls.removeLayer(l)}}},false);source.onopen=function(event){};source.onmessage=function(event){};source.onerror=function(event){if(source.readyState===2){cls.connectToEventStream()}};this.eventSource=source}},disconnect:function(){this.eventSource.close()},setStreamUrl:function(newStreamUrl){this.options.streamUrl=newStreamUrl},setFeatureIdField:function(fieldName){this.options.featureIdField=fieldName},switchStream:function(newStream,featureIdField,emptyLayer=false){if(emptyLayer){this.clearLayers()}this.setStreamUrl(newStream);this.setFeatureIdField(featureIdField);this.disconnect();this.connectToEventStream()}});L.geoSSE=function(data,options){return new GeoSSE(data,options)};export default GeoSSE;